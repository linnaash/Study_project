# В docker-compose описываются сервисы.
# Каждый сервис - это отдельный контейнер.
# Например, сервисом может быть клиент, сервер или база данных.
# Описание сервисов начинается с ключевого слова 'services'.
services:

  # Здесь разворачиваем серверное приложение и базу данных.
  # Для этого нужно создать два сервиса.
  # Первый сервис (контейнер) — это сервер.
  # Имя сервиса можно выбрать любое, но лучше использовать понятное название.
  # В данном случае используем название 'webapi' для сервера.
  webapi:
    image: ${DOCKER_REGISTRY-}webapi

    # С помощью ключевого слова "build" указываем
    # путь к файлу Dockerfile, который будет использован для создания образа.
    # В данном случае '.' указывает на папку, где находится Dockerfile.
    build:
      context: .
      dockerfile: ./Dockerfile

    # Ключевое слово "environment" позволяет задать переменные окружения.
    # Переменные из docker-compose.yml заменят переменные из Dockerfile,
    # если они присутствуют в образе.
    environment:
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development

    # Сервер настроен на использование порта 80.
    # Чтобы обращаться к нему с компьютера вне контейнера,
    # нужно настроить проброс порта.
    # Это делается с помощью 'ports' в формате: [порт компьютера]:[порт контейнера].
    # Здесь связываем порт 5000 на компьютере с портом 80 в контейнере.
    ports:
      - "5000:80"
